(ns app\posts
  (:use \DirectoryIterator)
  (:use \ParsedownExtra)
  (:use \Spatie\YamlFrontMatter\YamlFrontMatter)
  (:require app\helpers))

(def- posts-path "/../content/posts")

(defn markdown-to-html [markdown]
  (let [parsedown (php/new ParsedownExtra)]
    (php/-> parsedown (text markdown))))

(defn- get-posts-iterator []
  (php/new DirectoryIterator (str __DIR__ posts-path)))

(defn- parse-front-matter [file]
  (php/:: YamlFrontMatter (parse (php/file_get_contents file))))

(defn- query-front-matter [post key]
  (php/-> post (matter key)))

(defn get-title [post]
  (query-front-matter post "title"))

(defn get-excerpt [post]
  (query-front-matter post "excerpt"))

(defn get-date [post]
  (query-front-matter post "date"))

(defn get-formatted-date [post & [format]]
  (let [format (or format "F jS, Y")]
    (php/date_format (php/new \Datetime (get-date post)) format)))

(defn get-author [post]
  (query-front-matter post "author"))

(defn get-body [post]
  (php/-> post (body)))

(defn- slugify [string]
  (php/strtolower
   (php/trim
    (php/preg_replace "/[^A-Za-z0-9-]+/" "-" string)
    "-")))

(defn- slugify-date [post]
  (php/str_replace "-" "/" (get-date post)))

(defn- generate-slug [post]
  (str (slugify-date post) "/" (slugify (get-title post))))

(defn- glue-slug-together [year month day slug]
  (str year "/" month "/" day "/" slug))

(defn get-all []
  (reverse
   (sort-by
    (fn [post] (get-date post))
    (for [file :in (get-posts-iterator) :when (not (php/-> file (isDot)))]
      (parse-front-matter (php/-> file (getPathname)))))))

(defn get-latests [number-of-posts]
  (take number-of-posts (get-all)))

(defn paginate [posts page per-page]
  (let [pages (partition per-page posts)
        page-posts (get (partition per-page posts) (- page 1))]
    (if (nil? page-posts) [] page-posts)))

(defn get-by-slug [year month day slug]
  (let [posts (get-all)]
    (find
     (fn [post] (= (generate-slug post) (glue-slug-together year month day slug))) posts)))